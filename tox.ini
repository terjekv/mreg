[tox]
minversion = 4.0
skip_missing_interpreters = true
envlist =
#    flake8
#    coverage
    python{39}-django32
    python{39,310,311}-django40
    python{310,311}-django41
    python{310,311}-django42
    python311-django-main

toxworkdir = {env:TOX_WORKDIR:.tox}

[gh-actions]
python =
    3.9: python39
    3.10: python310
    3.11: python311

[testenv]
setenv =
    DJANGO_SETTINGS_MODULE=mregsite.settings
    CI=True
passenv = MREG_*, GITHUB_*
deps =
    -r{toxinidir}/requirements-test.txt
    django32: Django>=3.2,<3.3
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2
    django42: Django>=4.2.a1,<4.3
basepython =
    python39: python3.9
    python310: python3.10
    python311: python3.11

allowlist_externals =
    pytest
commands =
    pytest {toxinidir}/mreg/tests.py {toxinidir}/mreg/api/v1/tests/

[testenv:flake8]
description = Invoke flake8 on the project.
setenv =
    DJANGO_SETTINGS_MODULE=mregsite.settings
    CI=True
passenv = MREG_*, GITHUB_*
skip_install = true
deps =
    flake8
#    flake8-bugbear
#    flake8-docstrings>=1.3.1
#    flake8-typing-imports>=1.1
#    pep8-naming
commands =
    flake8 # mreg/ mregsite/ hostpolicy/


[testenv:coverage]
description = Report the coverage of the project.
setenv =
    DJANGO_SETTINGS_MODULE=mregsite.settings
    CI=True
passenv = MREG_*, GITHUB_*
deps =
    -r{toxinidir}/requirements-test.txt

commands =
    coverage run manage.py test
    coverage report -m
allowlist_externals = coverage

[flake8]
exclude = mreg/migrations/ hostpolicy/migrations/ .tox env
application-import-names = mreg hostpolicy
max-line-length = 119

[coverage:report]
fail_under = 98
show_missing = true
exclude_lines =
    'pragma: no cover'
    'def __repr__'

[coverage:run]
omit =
    manage.py
    */migrations/*
    # omit anything in a .local, venv/* directory anywhere
    */.local/*
    venv/*
    env/*
    */.virtualenvs/*
    */virtualenv/*

[coverage:html]
directory = coverage_html_report