[tox]
minversion = 4.0
skip_missing_interpreters = true
envlist =
    lint
    coverage
    python{37,38,39}-django32
    python{38,39,310}-django40
    python{38,39,310,311}-django41
    python{38,39,310,311}-django42

toxworkdir = {env:TOX_WORKDIR:.tox}

[gh-actions]
python =
    3.7: python37
    3.8: python38
    3.9: python39
    3.10: python310
    3.11: python311

[testenv]
setenv =
    DJANGO_SETTINGS_MODULE=mregsite.settings
    CI=True
passenv = MREG_*, GITHUB_*
deps =
    -r{toxinidir}/requirements-test.txt
    django32: Django>=3.2,<3.3
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2
    django42: Django>=4.2.a1,<4.3
basepython =
    python37: python3.7
    python38: python3.8
    python39: python3.9
    python310: python3.10
    python311: python3.11
allowlist_externals =
    coverage
    python
commands =
    python --version
    python -m django version
    coverage run manage.py test

[testenv:lint]
description = Lint the project.
setenv =
    DJANGO_SETTINGS_MODULE=mregsite.settings
    CI=True
passenv = MREG_*, GITHUB_*
skip_install = true
deps = ruff
commands = ruff check .

[testenv:coverage]
description = Report the coverage of the project.
setenv =
    DJANGO_SETTINGS_MODULE=mregsite.settings
    CI=True
passenv = MREG_*, GITHUB_*
deps =
    -r{toxinidir}/requirements-test.txt

commands =
    coverage run manage.py test
    coverage report -m
allowlist_externals = coverage


[coverage:report]
fail_under = 98
show_missing = true
exclude_lines =
    'pragma: no cover'
    'def __repr__'

[coverage:run]
omit =
    manage.py
    */migrations/*
    # omit anything in a .local, venv/* directory anywhere
    */.local/*
    venv/*
    env/*
    */.virtualenvs/*
    */virtualenv/*

[coverage:html]
directory = coverage_html_report
